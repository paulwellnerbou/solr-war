apply plugin: "war"
apply plugin: 'maven'
apply plugin: 'maven-publish'

group 'de.wellnerbou.solr'
version '1.0-solr47-log4j2'

repositories {
    jcenter()
}

configurations {
    solr
}

ext.versions = [
    solr: "4.7.2",
    log4j2: "2.1",
    slf4j: "1.7.9"
]

dependencies {
    solr "org.apache.solr:solr:${versions.solr}@war"

    compile (
        "org.apache.logging.log4j:log4j-api:${versions.log4j2}",
        "org.apache.logging.log4j:log4j-core:${versions.log4j2}",
        "org.apache.logging.log4j:log4j-jcl:${versions.log4j2}",
        "org.apache.logging.log4j:log4j-1.2-api:${versions.log4j2}",
        "org.apache.logging.log4j:log4j-slf4j-impl:${versions.log4j2}",
        "org.slf4j:slf4j-api:${versions.slf4j}",
        "org.slf4j:jul-to-slf4j:${versions.slf4j}",
        "org.slf4j:jcl-over-slf4j:${versions.slf4j}",
    )
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

task unzip(type: Copy) {
    from {
        configurations.solr.collect { zipTree(it) }
    }
    into "$buildDir/rootContent"
}

defaultTasks 'war'
war.dependsOn('unzip')
war {
    from "$buildDir/rootContent"
    baseName = "solr"
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

if (!project.hasProperty("publishUser")) {
    ext.publishUser = ""
    ext.publishPassword = ""
}

if (!project.hasProperty("repo")) {
    ext.repo = "$buildDir/repo"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.web
        }
    }
    repositories {
        maven {
            credentials {
                username "$publishUser"
                password "$publishPassword"
            }
            // change to point to your repo, e.g. http://my.org/repo
            url "$repo"
        }
    }
}
